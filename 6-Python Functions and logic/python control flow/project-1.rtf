{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red129\green131\blue134;\red23\green23\blue23;\red255\green255\blue255;
\red164\green191\blue255;\red252\green115\blue96;}
{\*\expandedcolortbl;;\cssrgb\c57647\c58431\c59608;\cssrgb\c11765\c11765\c11765;\cssrgb\c100000\c100000\c100000;
\cssrgb\c70196\c80000\c100000;\cssrgb\c100000\c53725\c45098;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \'97 
\f1\fs28\fsmilli14080 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # Write your large_power function here:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 def large_power\cf4 \strokec4 (\cf6 \strokec6 base\cf4 \strokec4 ,\cf6 \strokec6 exponent\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  \cf6 \strokec6 base\cf4 \strokec4 **\cf6 \strokec6 exponent>5000\cf4 \strokec4 :\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 True\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 else\cf4 \strokec4 :\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 False\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Uncomment these function calls to test your large_power function:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf6 \strokec6 large_power\cf4 \strokec4 (\cf6 \strokec6 2\cf4 \strokec4 , \cf6 \strokec6 13\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # should print True\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf6 \strokec6 large_power\cf4 \strokec4 (\cf6 \strokec6 2\cf4 \strokec4 , \cf6 \strokec6 12\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # should print False\cf4 \cb1 \strokec4 \
\
\
\
\
\
\'97\cf2 \cb3 \strokec2 # Write your over_budget function here:\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 def over_budget\cf4 \strokec4 (\cf6 \strokec6 budget\cf4 \strokec4 ,\cf6 \strokec6 food_bill\cf4 \strokec4 ,\cf6 \strokec6 electricity_bill\cf4 \strokec4 ,\cf6 \strokec6 internet_bill\cf4 \strokec4 ,\cf6 \strokec6 rent\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  \cf6 \strokec6 budget<food_bill\cf4 \strokec4 +\cf6 \strokec6 electricity_bill\cf4 \strokec4 +\cf6 \strokec6 internet_bill\cf4 \strokec4 +\cf6 \strokec6 rent\cf4 \strokec4 :\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 True\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 else\cf4 \strokec4 :\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 False\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Uncomment these function calls to test your over_budget function:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf6 \strokec6 over_budget\cf4 \strokec4 (\cf6 \strokec6 100\cf4 \strokec4 , \cf6 \strokec6 20\cf4 \strokec4 , \cf6 \strokec6 30\cf4 \strokec4 , \cf6 \strokec6 10\cf4 \strokec4 , \cf6 \strokec6 40\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # should print False\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf6 \strokec6 over_budget\cf4 \strokec4 (\cf6 \strokec6 80\cf4 \strokec4 , \cf6 \strokec6 20\cf4 \strokec4 , \cf6 \strokec6 30\cf4 \strokec4 , \cf6 \strokec6 10\cf4 \strokec4 , \cf6 \strokec6 30\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # should print True\cf4 \cb1 \strokec4 \
\
\
\
\
\
\'97\cf2 \cb3 \strokec2 # Write your twice_as_large function here:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 def twice_as_large\cf4 \strokec4 (\cf6 \strokec6 num1\cf4 \strokec4 ,\cf6 \strokec6 num2\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  \cf6 \strokec6 num1>num2\cf4 \strokec4 *\cf6 \strokec6 2\cf4 \strokec4 :\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 True\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 else\cf4 \strokec4 :\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 False\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Uncomment these function calls to test your twice_as_large function:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf6 \strokec6 twice_as_large\cf4 \strokec4 (\cf6 \strokec6 10\cf4 \strokec4 , \cf6 \strokec6 5\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # should print False\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf6 \strokec6 twice_as_large\cf4 \strokec4 (\cf6 \strokec6 11\cf4 \strokec4 , \cf6 \strokec6 5\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # should print True\cf4 \cb1 \strokec4 \
\
\
\
\
\
\'97\cf2 \cb3 \strokec2 # Write your divisible_by_ten function here:\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 def divisible_by_ten\cf4 \strokec4 (\cf6 \strokec6 num\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  \cf6 \strokec6 num\cf4 \strokec4 %\cf6 \strokec6 10\cf4 \strokec4 ==\cf6 \strokec6 0\cf4 \strokec4 :\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 True\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 else\cf4 \strokec4 :\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 False\cf4 \cb1 \strokec4 \
\
\
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Uncomment these function calls to test your divisible_by_ten function:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf6 \strokec6 divisible_by_ten\cf4 \strokec4 (\cf6 \strokec6 20\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # should print True\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf6 \strokec6 divisible_by_ten\cf4 \strokec4 (\cf6 \strokec6 25\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # should print False\cf4 \cb1 \strokec4 \
\
\
\
\
\
\
\
\
\cf2 \cb3 \strokec2 # Write your not_sum_to_ten function here:\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl440\partightenfactor0
\cf5 \cb3 \strokec5 def not_sum_to_ten\cf4 \strokec4 (\cf6 \strokec6 num1\cf4 \strokec4 ,\cf6 \strokec6 num2\cf4 \strokec4 ):\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3   \cf5 \strokec5 if\cf4 \strokec4  \cf6 \strokec6 num1\cf4 \strokec4 +\cf6 \strokec6 num2!\cf4 \strokec4 =\cf6 \strokec6 10\cf4 \strokec4 :\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 True\cf4 \cb1 \strokec4 \
\cb3   \cf5 \strokec5 else\cf4 \strokec4 :\cb1 \
\cb3     \cf5 \strokec5 return\cf4 \strokec4  \cf5 \strokec5 False\cf4 \cb1 \strokec4 \
\
\cb3   \cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # Uncomment these function calls to test your not_sum_to_ten function:\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf6 \strokec6 not_sum_to_ten\cf4 \strokec4 (\cf6 \strokec6 9\cf4 \strokec4 , \cf6 \strokec6 -1\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # should print True\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf6 \strokec6 not_sum_to_ten\cf4 \strokec4 (\cf6 \strokec6 9\cf4 \strokec4 , \cf6 \strokec6 1\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # should print False\cf4 \cb1 \strokec4 \
\pard\pardeftab720\sl440\partightenfactor0
\cf4 \cb3 print(\cf6 \strokec6 not_sum_to_ten\cf4 \strokec4 (\cf6 \strokec6 5\cf4 \strokec4 ,\cf6 \strokec6 5\cf4 \strokec4 ))\cb1 \
\pard\pardeftab720\sl440\partightenfactor0
\cf2 \cb3 \strokec2 # should print False\cf4 \cb1 \strokec4 \
}